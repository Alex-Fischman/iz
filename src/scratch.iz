#include "src/std.iz"

# only works in release build
# print range@1@1000.filter@(n -> n % 3 == 0 || n % 5 == 0).sum

fibonacci_ = l -> {
	x::y::xs ?= l
	if x + y > 4000000 l
	else fibonacci_@((x + y)::l)
}
fibonacci = fibonacci_@[2 1]

print fibonacci.filter@is_even.sum

euler_three = n -> m -> {
	if n % m == 0       euler_three@(n / m)@3
	else if m < n^(1/2) euler_three@ n     @(m + 2)
	else n
}

# only works in release build
# print euler_three@600851475143@3

# unused
is_prime = n -> {
	is_prime_ = m -> {
		if m == 1 true
		else if n % m == 0 false
		else is_prime_@(m - 1)
	}
	is_prime_@(n - 1)
}

print range@0@10.map@(n -> {
	z = []
	[n n]
})
