#match ( ) id
#match { } const
#match [ ] iter

#affix =  set  2 1 2 r
#affix :  type 2 1 3 r
#affix -> func 2 1 4 r
#affix ?  if   3 1 5 r

#affix | or  2 1 6 l
#affix & and 2 1 6 l

#affix == eq  2 1 7 l
#affix != neq 2 1 7 l
#affix <  lt  2 1 7 l
#affix >  gt  2 1 7 l
#affix <= lte 2 1 7 l
#affix >= gte 2 1 7 l
#affix !  not 1 0 8 l

#affix + add 2 1 9 l
#affix - sub 2 1 9 l
#affix * mul 2 1 10 l
#affix / div 2 1 10 l
#affix % mod 2 1 10 l
#affix ^ pow 2 1 11 l

#affix . dot  2 1 12 l
#affix @ call 2 1 13 l

dot = x -> f -> f@x

id = a -> a

three = 3.id

three
