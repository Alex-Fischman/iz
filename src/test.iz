#include "src/std.iz"

assert -1 (1 + 2 * 3 - 4) ^ 2 / -9
assert true !false && 1 == 1 && true != false || (6 <= 2)
assert 2 if false 1 else if true 2 else 3
assert 1 9 % 4

assert 8 {a = 3 b = 5 a + b}
assert 3 {a = 1 a = 2 a + 1}
assert 2 {c = 1 {c = 2} c}
assert 1 {c = 1 {c}}

id = x -> x
square = x -> x * x
factorial = n -> if n <= 1 1 else n * factorial@(n - 1)

assert 1 id@1
assert 256 square@16
assert 3 (a -> b -> a)@3@4
assert 9 dot@3@square
assert 9 3.square
assert 5 {x = 2 y->x+y}@3
assert 24 factorial@4
assert [[3] 1 2] {
	x::y::xs = [1 2 3]
	[xs x y]
}

assert 1 {if (a = 1) a else 2}
assert Some@16 [1 2 3 4 5].map@square.filter@is_even.get@1
assert 55 range@1@11.sum
assert 5 [1 5 2 4 3].length

assert _ {_ = 1 _}
assert 1 {a = 1 x -> a}@5
