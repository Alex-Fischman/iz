#include "std.iz"

digit := n -> m -> (m / 10^n).floor % 10
length := n -> if n < 10 1 else 1 + length@(n / 10)
is_palidromic := n -> range@0@(floor@(length@n / 2))
	.map@(i -> digit@i@n == digit@(length@n - i - 1)@n)
	.all
three_digit_numbers := range@900@1000

print three_digit_numbers
	.map@(n -> three_digit_numbers.map@(m -> n * m).filter@is_palidromic)
	.foldl@concat@[]
	.foldl@max@0
